import React, {Component} from 'react'
import {connect} from 'react-redux'
import {Link} from 'react-router'
import uniqueString from 'unique-string'

import Form from 'components/form'

import {
    fetchClients,
    addNewClient
} from 'actions'
import {getClients} from 'selectors'

class Register extends Component {
    constructor (props) {
        super (props);

        this.state = {
            popupOpen: false
        };

        this.submit = this.submit.bind(this)
    }

    componentDidMount () {
        this.props.fetchClients()
    }

    togglePopup (status) {
        this.setState({
            popupOpen: status
        });
    }

    renderClient (client, index) {
        return (
            <Link key={index} to={"/client/" + `${client.id}`} className="register-list__item">
                <span className="register-list__name">{client.name}</span>
                <span className="register-list__surname">{client.secondName}</span>
            </Link>
        )
    }

    submit (client) {
        client.id = uniqueString();
        this.props.addNewClient(client);
        this.setState({
            popupOpen: false
        });
    }

    render () {
        const {clients} = this.props;

        return (
            <div className="register">
                <div
                    onClick={this.togglePopup.bind(this, true)}
                    className="register__btn">
                    Регистрация клиента
                </div>
                <div className="register-list">
                    {clients.map((client, index) => this.renderClient(client, index))}
                </div>

                <Form onSubmit={this.submit} togglePopup={this.togglePopup.bind(this, false)} formActive={this.state.popupOpen} />

                <div
                    onClick={this.togglePopup.bind(this, false)}
                    className="shadow">
                </div>
            </div>
        )
    }
}

const mapStateToProps = (state, ownProps) => ({
    clients: getClients(state, ownProps)
})

const mapDispatchToProps = {
    fetchClients,
    addNewClient
}

export default connect(mapStateToProps, mapDispatchToProps)(Register)