import React from 'react'
import { Field, reduxForm } from 'redux-form'

import { normalizePhone, normalizeIndex} from '../form/normalize'

import {
    required,
    email,
    phone,
    maxLength20,
    maxLength50
} from '../form/validate'

const renderInputField = ({
        input,
        label,
        type,
        id,
        className,
        meta: { touched, error, warning }
    }) => (
    <div className="form__row">
        {touched &&
        ((error && <span className="form__error">{error}</span>) ||
        (warning && <span className="form__warning">{warning}</span>))}
        <label htmlFor={id} className="form__label-text">{label}</label>
        <input {...input} id={id} type={type} className={className} />
    </div>
)
const renderSelectField = ({
      input,
      label,
      type,
      id,
      className,
      meta: { touched, error },
      children
    }) => (
    <div className="form__row">
        {touched && error && <span className="form__error">{error}</span>}
        <label htmlFor={id} className="form__label-text">{label}</label>
        <select {...input} id={id} className={className}>
            {children}
        </select>
    </div>
)

const UpdateForm = (props) => {
    let UpdateFormInner = props => {
        const { handleSubmit, pristine, reset, submitting, client } = props;

        return (
            <form className="personal__main" onSubmit={ handleSubmit }>
                <div className="personal__left">
                    <Field
                        name="name"
                        id="firstName"
                        component={renderInputField}
                        type="text"
                        label="Имя"
                        className="form__input-text"
                        validate={[required, maxLength20]}/>
                    <Field
                        name="secondName"
                        id="secondName"
                        component={renderInputField}
                        type="text"
                        label="Фамилия"
                        className="form__input-text"
                        validate={[required, maxLength20]}/>
                    <Field
                        name="email"
                        id="email"
                        component={renderInputField}
                        type="text"
                        label="Email"
                        className="form__input-text"
                        validate={[required, email, maxLength20]}/>
                    <Field
                        name="phone"
                        id="phone"
                        component={renderInputField}
                        type="text"
                        label="Телефон"
                        normalize={normalizePhone}
                        className="form__input-text"
                        validate={[required, phone]}/>
                    <Field
                        validate={[required]}
                        name="region"
                        id="region"
                        component={renderSelectField}
                        label="Уезд"
                        className="form__input-text">
                        <option value="Архангельский">Архангельский</option>
                        <option value="Еменский">Еменский</option>
                        <option value="Онежский">Онежский</option>
                    </Field>
                    <Field
                        name="city"
                        id="city"
                        component={renderInputField}
                        type="text"
                        label="Город / Область"
                        className="form__input-text"
                        validate={[required, maxLength20]}/>
                    <Field
                        name="address"
                        id="address"
                        component={renderInputField}
                        type="text"
                        label="Адрес"
                        className="form__input-text"
                        validate={[required, maxLength50]}/>
                    <Field
                        name="index"
                        id="index"
                        component={renderInputField}
                        normalize={normalizeIndex}
                        type="text"
                        label="Индекс"
                        fieldValue={client.index}
                        className="form__input-text"
                        validate={[required, maxLength20]}/>
                </div>
                <div className="personal__right">
                    <div className="form__row">
                        <span className="personal__row-label">Статус клиента</span>
                        <span className="personal__row-value">Активный</span>
                    </div>
                    <div className="form__row">
                        <span className="personal__row-label">Источник</span>
                        <span className="personal__row-value">Через сайт</span>
                    </div>
                    <div className="form__row">
                        <span className="personal__row-label">IP регистрации</span>
                        <span className="personal__row-value"><span className="personal__value--underline">{client.ipInfo.ip}</span> <span>( {client.ipInfo.country} )</span></span>
                    </div>
                    <Field
                        validate={[required]}
                        name="language"
                        id="language"
                        component={renderSelectField}
                        label="Язык общения"
                        className="form__input-text">
                        <option value="Русский">Русский</option>
                        <option value="Английский">Английский</option>
                    </Field>
                    <div className="form__row">
                        <span className="personal__row-label">Пригласил друзей</span>
                        <span className="personal__row-value">0</span>
                    </div>
                    <div className="form__row">
                        <span className="personal__row-label">Рекламная рассылка</span>
                        <span className="personal__row-value personal__row-value--checkbox">
                            <div>
                                <Field name="dispathEmail" id="dispathEmail" component="input" type="checkbox"/>
                                <label htmlFor="dispathEmail">э-почта</label>
                            </div>
                            <div>
                                <Field name="dispathSms" id="dispathSms" component="input" type="checkbox"/>
                                <label htmlFor="dispathSms">смс</label>
                            </div>
                        </span>
                    </div>
                    <div className="form__btn-wrap">
                        <button disabled={submitting} type="submit" className="form__btn">Применить</button>
                    </div>
                </div>
            </form>
        )
    }

    const UpdateFormWrapped = reduxForm({
        form: 'updateClient',
        initialValues: {
            id: props.client.id,
            name: props.client.name,
            secondName: props.client.secondName,
            region: props.client.region,
            email: props.client.email,
            phone: props.client.phone,
            city: props.client.city,
            address: props.client.address,
            index: props.client.index,
            language: props.client.language,
            ipInfo: {
               ip: props.client.ipInfo.ip,
               country: props.client.ipInfo.country,
            },
            dispathEmail: props.client.dispathEmail,
            dispathSms: props.client.dispathSms
        }
    })(UpdateFormInner)

    return <UpdateFormWrapped {...props}/>;
}

export default UpdateForm;